
import { GoogleGenAI } from "@google/genai";

export async function generateThumbnail(prompt: string): Promise<string> {
  // API key is automatically sourced from process.env.API_KEY
  const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

  try {
    const fullPrompt = `Create an ultra-realistic, high-quality 16:9 thumbnail for a video or article. Style: photorealistic, cinematic lighting, 8k resolution, highly detailed, professional photography. Prompt: ${prompt}`;
    
    const response = await ai.models.generateImages({
        model: 'imagen-4.0-generate-001',
        prompt: fullPrompt,
        config: {
          numberOfImages: 1,
          outputMimeType: 'image/jpeg',
          aspectRatio: '16:9',
        },
    });

    if (response.generatedImages && response.generatedImages.length > 0) {
      const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
      return base64ImageBytes;
    } else {
      throw new Error("No image was generated by the API. Please try a different prompt.");
    }
  } catch (error) {
    console.error("Error generating thumbnail:", error);
    if (error instanceof Error) {
        throw new Error(`Failed to generate thumbnail: ${error.message}`);
    }
    throw new Error("An unknown error occurred while generating the thumbnail.");
  }
}
